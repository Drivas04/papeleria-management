
/* !!! This is code generated by Prisma. Do not edit directly. !!!
/* eslint-disable */

Object.defineProperty(exports, "__esModule", { value: true });

const {
  Decimal,
  objectEnumValues,
  makeStrictEnum,
  Public,
  getRuntime,
  skip
} = require('./runtime/index-browser.js')


const Prisma = {}

exports.Prisma = Prisma
exports.$Enums = {}

/**
 * Prisma Client JS version: 6.7.0
 * Query Engine version: 3cff47a7f5d65c3ea74883f1d736e41d68ce91ed
 */
Prisma.prismaVersion = {
  client: "6.7.0",
  engine: "3cff47a7f5d65c3ea74883f1d736e41d68ce91ed"
}

Prisma.PrismaClientKnownRequestError = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`PrismaClientKnownRequestError is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)};
Prisma.PrismaClientUnknownRequestError = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`PrismaClientUnknownRequestError is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.PrismaClientRustPanicError = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`PrismaClientRustPanicError is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.PrismaClientInitializationError = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`PrismaClientInitializationError is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.PrismaClientValidationError = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`PrismaClientValidationError is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.Decimal = Decimal

/**
 * Re-export of sql-template-tag
 */
Prisma.sql = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`sqltag is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.empty = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`empty is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.join = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`join is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.raw = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`raw is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.validator = Public.validator

/**
* Extensions
*/
Prisma.getExtensionContext = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`Extensions.getExtensionContext is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.defineExtension = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`Extensions.defineExtension is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}

/**
 * Shorthand utilities for JSON filtering
 */
Prisma.DbNull = objectEnumValues.instances.DbNull
Prisma.JsonNull = objectEnumValues.instances.JsonNull
Prisma.AnyNull = objectEnumValues.instances.AnyNull

Prisma.NullTypes = {
  DbNull: objectEnumValues.classes.DbNull,
  JsonNull: objectEnumValues.classes.JsonNull,
  AnyNull: objectEnumValues.classes.AnyNull
}



/**
 * Enums
 */

exports.Prisma.TransactionIsolationLevel = makeStrictEnum({
  ReadUncommitted: 'ReadUncommitted',
  ReadCommitted: 'ReadCommitted',
  RepeatableRead: 'RepeatableRead',
  Serializable: 'Serializable'
});

exports.Prisma.CajaScalarFieldEnum = {
  id_cierre_caja: 'id_cierre_caja',
  fecha_apertura: 'fecha_apertura',
  fecha_cierre: 'fecha_cierre',
  monto_inicial: 'monto_inicial',
  monto_final: 'monto_final',
  total_ventas: 'total_ventas',
  diferencia: 'diferencia',
  usuario_id_usuario: 'usuario_id_usuario'
};

exports.Prisma.CategoriaScalarFieldEnum = {
  id_categoria: 'id_categoria',
  nombre: 'nombre'
};

exports.Prisma.ClienteScalarFieldEnum = {
  id_cliente: 'id_cliente',
  cedula: 'cedula',
  nombre: 'nombre',
  apellido: 'apellido',
  telefono: 'telefono',
  compras_semanales: 'compras_semanales',
  deuda_total: 'deuda_total'
};

exports.Prisma.CompraScalarFieldEnum = {
  id_compra: 'id_compra',
  fecha_compra: 'fecha_compra',
  estado: 'estado',
  total: 'total',
  usuario_id_usuario: 'usuario_id_usuario',
  proveedor_id_proveedor: 'proveedor_id_proveedor'
};

exports.Prisma.CompraProductoScalarFieldEnum = {
  compra_id_compra: 'compra_id_compra',
  producto_id_producto: 'producto_id_producto',
  precio_unitario: 'precio_unitario',
  cantidad: 'cantidad',
  subtotal: 'subtotal'
};

exports.Prisma.FacturaCompraScalarFieldEnum = {
  id_factura: 'id_factura',
  fecha: 'fecha',
  subtotal: 'subtotal',
  impuestos: 'impuestos',
  total: 'total',
  compra_id_compra: 'compra_id_compra'
};

exports.Prisma.FacturaVentaScalarFieldEnum = {
  id_factura: 'id_factura',
  fecha: 'fecha',
  subtotal: 'subtotal',
  impuestos: 'impuestos',
  total: 'total',
  venta_id_venta: 'venta_id_venta'
};

exports.Prisma.MovimientoInventarioScalarFieldEnum = {
  id_movimiento: 'id_movimiento',
  tipo_movimiento: 'tipo_movimiento',
  fecha_movimiento: 'fecha_movimiento',
  cantidad: 'cantidad',
  producto_id_producto: 'producto_id_producto'
};

exports.Prisma.ProductoScalarFieldEnum = {
  id_producto: 'id_producto',
  nombre_producto: 'nombre_producto',
  descripcion: 'descripcion',
  stock: 'stock',
  nivel_alerta: 'nivel_alerta',
  categoria_id_categoria: 'categoria_id_categoria'
};

exports.Prisma.ProveedorScalarFieldEnum = {
  id_proveedor: 'id_proveedor',
  nombre: 'nombre',
  telefono: 'telefono',
  direccion: 'direccion'
};

exports.Prisma.UsuarioScalarFieldEnum = {
  id_usuario: 'id_usuario',
  usuario: 'usuario',
  contrase単a: 'contrase単a',
  rol: 'rol'
};

exports.Prisma.VentaScalarFieldEnum = {
  id_venta: 'id_venta',
  tipo_venta: 'tipo_venta',
  estado: 'estado',
  cliente_id_cliente: 'cliente_id_cliente',
  cliente_cedula: 'cliente_cedula',
  usuario_id_usuario: 'usuario_id_usuario'
};

exports.Prisma.VentaProductoScalarFieldEnum = {
  venta_id_venta: 'venta_id_venta',
  producto_id_producto: 'producto_id_producto',
  cantidad: 'cantidad',
  precio_unitario: 'precio_unitario'
};

exports.Prisma.SortOrder = {
  asc: 'asc',
  desc: 'desc'
};

exports.Prisma.NullsOrder = {
  first: 'first',
  last: 'last'
};

exports.Prisma.CategoriaOrderByRelevanceFieldEnum = {
  nombre: 'nombre'
};

exports.Prisma.ClienteOrderByRelevanceFieldEnum = {
  cedula: 'cedula',
  nombre: 'nombre',
  apellido: 'apellido',
  telefono: 'telefono'
};

exports.Prisma.CompraOrderByRelevanceFieldEnum = {
  estado: 'estado'
};

exports.Prisma.MovimientoInventarioOrderByRelevanceFieldEnum = {
  tipo_movimiento: 'tipo_movimiento'
};

exports.Prisma.ProductoOrderByRelevanceFieldEnum = {
  nombre_producto: 'nombre_producto',
  descripcion: 'descripcion',
  nivel_alerta: 'nivel_alerta'
};

exports.Prisma.ProveedorOrderByRelevanceFieldEnum = {
  nombre: 'nombre',
  telefono: 'telefono',
  direccion: 'direccion'
};

exports.Prisma.UsuarioOrderByRelevanceFieldEnum = {
  usuario: 'usuario',
  contrase単a: 'contrase単a',
  rol: 'rol'
};

exports.Prisma.VentaOrderByRelevanceFieldEnum = {
  tipo_venta: 'tipo_venta',
  estado: 'estado',
  cliente_cedula: 'cliente_cedula'
};


exports.Prisma.ModelName = {
  Caja: 'Caja',
  Categoria: 'Categoria',
  Cliente: 'Cliente',
  Compra: 'Compra',
  CompraProducto: 'CompraProducto',
  FacturaCompra: 'FacturaCompra',
  FacturaVenta: 'FacturaVenta',
  MovimientoInventario: 'MovimientoInventario',
  Producto: 'Producto',
  Proveedor: 'Proveedor',
  Usuario: 'Usuario',
  Venta: 'Venta',
  VentaProducto: 'VentaProducto'
};

/**
 * This is a stub Prisma Client that will error at runtime if called.
 */
class PrismaClient {
  constructor() {
    return new Proxy(this, {
      get(target, prop) {
        let message
        const runtime = getRuntime()
        if (runtime.isEdge) {
          message = `PrismaClient is not configured to run in ${runtime.prettyName}. In order to run Prisma Client on edge runtime, either:
- Use Prisma Accelerate: https://pris.ly/d/accelerate
- Use Driver Adapters: https://pris.ly/d/driver-adapters
`;
        } else {
          message = 'PrismaClient is unable to run in this browser environment, or has been bundled for the browser (running in `' + runtime.prettyName + '`).'
        }

        message += `
If this is unexpected, please open an issue: https://pris.ly/prisma-prisma-bug-report`

        throw new Error(message)
      }
    })
  }
}

exports.PrismaClient = PrismaClient

Object.assign(exports, Prisma)
